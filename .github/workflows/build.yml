name: build

on:
  push:
    tags:
      - v*
    branches:
      - main
    paths:
      - "go.*"
      - "**/*.go"
      - "Taskfile.yml"
      - "Dockerfile"
      - ".github/workflows/build.yml"
      - "testdata/**"
  pull_request:
    paths:
      - "go.*"
      - "**/*.go"
      - "Taskfile.yml"
      - "Dockerfile"
      - ".github/workflows/build.yml"
      - "testdata/"

permissions:
  contents: read

jobs:
  govulncheck:
    uses: caarlos0/meta/.github/workflows/govulncheck.yml@main
    with:
      go-version: stable
  semgrep:
    uses: caarlos0/meta/.github/workflows/semgrep.yml@main
  ruleguard:
    uses: caarlos0/meta/.github/workflows/ruleguard.yml@main
    with:
      go-version: stable
      args: "-disable largeloopcopy"
  unit-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: setup-tparse
        run: go install github.com/mfridman/tparse@latest
      - run: task setup
      - name: test
        run: ./scripts/test.sh test ${{ matrix.os }}
      - uses: codecov/codecov-action@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
  acceptance-tests:
    strategy:
      matrix:
        pkgFormat: [deb, rpm, apk, archlinux]
        pkgPlatform: [amd64, arm64, 386, ppc64le, armv6, armv7, s390x]
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
      NO_TEST_PPC64LE: "true"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - run: task setup
      - name: setup-tparse
        run: go install github.com/mfridman/tparse@latest
      - name: acceptance
        run: ./scripts/test.sh acceptance ubuntu-latest
        env:
          TEST_PATTERN: "/${{ matrix.pkgFormat }}/${{ matrix.pkgPlatform }}/"
